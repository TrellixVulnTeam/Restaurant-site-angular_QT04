{"ast":null,"code":"import { BehaviorSubject, catchError, map, of } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HttpService = /*#__PURE__*/(() => {\n  class HttpService {\n    constructor(http) {\n      this.http = http;\n      this.items$ = new BehaviorSubject([]);\n      this.api = \"https://raw.githubusercontent.com/antonkapustin/Restaurant-site-angular/main/data.json\";\n    }\n\n    getData() {\n      const data = this.http.get(this.api).pipe(map(response => {\n        this.updateItems(response);\n        return response;\n      }), catchError(this.handleError(\"GetData\")));\n      return data;\n    }\n\n    updateItems(data) {\n      this.items$.next(data);\n    }\n\n    getItems$() {\n      return this.items$;\n    }\n\n    handleError(operation = \"operation\", result) {\n      return error => {\n        console.error(error);\n        return of(result);\n      };\n    }\n\n  }\n\n  HttpService.ɵfac = function HttpService_Factory(t) {\n    return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  HttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpService,\n    factory: HttpService.ɵfac,\n    providedIn: \"root\"\n  });\n  return HttpService;\n})();","map":null,"metadata":{},"sourceType":"module"}